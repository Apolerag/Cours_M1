LLVM_Based_CFGDumper: 
	fabrique le CGF des différentes fonctions du code étudié

LLVM_Based_CFGExplorer: 
	fabrique le CFG.
	visite le CFG:
		controle les tableau et les pointeurs

LLVM_Based_ConstPtrPrinter:
Pour chaque fonction !vide du code les pointeurs sont identifiés et analisés.
# PointerInfo: nom	[Declared] or [ParmVar]
|- last target: &y
|- is const: yes or no 
	if not const -> exemple 
|- is incremented or decremented: yes or no
	-> code correspondantcode correspondant

`- is dereferenced: yes or no
	-> code correspondant
			


